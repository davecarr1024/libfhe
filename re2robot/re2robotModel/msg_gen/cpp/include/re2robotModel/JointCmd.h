/* Auto-generated by genmsg_cpp for file /home/dave/ros/re2robot/re2robotModel/msg/JointCmd.msg */
#ifndef RE2ROBOTMODEL_MESSAGE_JOINTCMD_H
#define RE2ROBOTMODEL_MESSAGE_JOINTCMD_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"


namespace re2robotModel
{
template <class ContainerAllocator>
struct JointCmd_ : public ros::Message
{
  typedef JointCmd_<ContainerAllocator> Type;

  JointCmd_()
  : mode(0)
  , cmd(0.0)
  , controller()
  {
  }

  JointCmd_(const ContainerAllocator& _alloc)
  : mode(0)
  , cmd(0.0)
  , controller(_alloc)
  {
  }

  typedef uint8_t _mode_type;
  uint8_t mode;

  typedef float _cmd_type;
  float cmd;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _controller_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  controller;

  enum { MODE_EFFORT = 1 };
  enum { MODE_VELOCITY = 2 };
  enum { MODE_POSITION = 3 };

private:
  static const char* __s_getDataType_() { return "re2robotModel/JointCmd"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "0da0207f4feb073f159111e615f666b8"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "uint8 MODE_EFFORT = 1\n\
uint8 MODE_VELOCITY = 2\n\
uint8 MODE_POSITION = 3\n\
\n\
uint8 mode\n\
float32 cmd\n\
string controller\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, mode);
    ros::serialization::serialize(stream, cmd);
    ros::serialization::serialize(stream, controller);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, mode);
    ros::serialization::deserialize(stream, cmd);
    ros::serialization::deserialize(stream, controller);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(mode);
    size += ros::serialization::serializationLength(cmd);
    size += ros::serialization::serializationLength(controller);
    return size;
  }

  typedef boost::shared_ptr< ::re2robotModel::JointCmd_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::re2robotModel::JointCmd_<ContainerAllocator>  const> ConstPtr;
}; // struct JointCmd
typedef  ::re2robotModel::JointCmd_<std::allocator<void> > JointCmd;

typedef boost::shared_ptr< ::re2robotModel::JointCmd> JointCmdPtr;
typedef boost::shared_ptr< ::re2robotModel::JointCmd const> JointCmdConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::re2robotModel::JointCmd_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::re2robotModel::JointCmd_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace re2robotModel

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::re2robotModel::JointCmd_<ContainerAllocator> > {
  static const char* value() 
  {
    return "0da0207f4feb073f159111e615f666b8";
  }

  static const char* value(const  ::re2robotModel::JointCmd_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x0da0207f4feb073fULL;
  static const uint64_t static_value2 = 0x159111e615f666b8ULL;
};

template<class ContainerAllocator>
struct DataType< ::re2robotModel::JointCmd_<ContainerAllocator> > {
  static const char* value() 
  {
    return "re2robotModel/JointCmd";
  }

  static const char* value(const  ::re2robotModel::JointCmd_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::re2robotModel::JointCmd_<ContainerAllocator> > {
  static const char* value() 
  {
    return "uint8 MODE_EFFORT = 1\n\
uint8 MODE_VELOCITY = 2\n\
uint8 MODE_POSITION = 3\n\
\n\
uint8 mode\n\
float32 cmd\n\
string controller\n\
\n\
";
  }

  static const char* value(const  ::re2robotModel::JointCmd_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::re2robotModel::JointCmd_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.mode);
    stream.next(m.cmd);
    stream.next(m.controller);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct JointCmd_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::re2robotModel::JointCmd_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::re2robotModel::JointCmd_<ContainerAllocator> & v) 
  {
    s << indent << "mode: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.mode);
    s << indent << "cmd: ";
    Printer<float>::stream(s, indent + "  ", v.cmd);
    s << indent << "controller: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.controller);
  }
};


} // namespace message_operations
} // namespace ros

#endif // RE2ROBOTMODEL_MESSAGE_JOINTCMD_H

