import os
env = Environment()

import sys
py_ver = sys.version[:3]
env.Append( CPPPATH = [ '/usr/include/python%s' % py_ver ] )
env.Append( LIBS = [ 'python%s' % py_ver, 'boost_python', 'yaml-cpp' ] )

env.Append( CPPPATH = [ '#', '#mods' ] )
env.Append( RPATH = [ env.Dir( '#' ).abspath, '/usr/local/lib' ] )
env.Append( CPPFLAGS = [ '-g' ] )
env.Append( LIBS = [ 'boost_filesystem' ] )

lib_fhe = env.SharedLibrary( 'fhe', env.Glob( 'fhe/*.cpp' ) + env.Glob( 'fhe/math/*.cpp' ) )

env = env.Clone()
env.Append( LIBS = [ lib_fhe ] )

mod_libs = []
for mod in filter( os.path.isdir, map( str, env.Glob( 'mods/*' ) ) ):
    mod_srcs = env.Glob( '%s/*.cpp' % mod )
    mod_libs.append( env.SharedLibrary( mod, mod_srcs ) )
    
env = env.Clone()
env.Append( LIBS = [ mod_libs ] )

env.SharedLibrary( 'fhe', [], SHLIBPREFIX = '' )

app_srcs = env.Glob( 'apps/*.cpp' )
for app_src in app_srcs:
    app = env.Program( app_src )

env = env.Clone()
env.Append( LIBS = [ 'gtest' ] )

test_srcs = env.Glob( 'tests/*.cpp' )
for test_src in test_srcs:
    test = env.Program( test_src )
    test_name = str( test[0] )
    env.Command( test_name + '.out', test, test_name )
